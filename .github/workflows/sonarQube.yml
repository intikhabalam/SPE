name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '19'

    - name: Cache Node.js modules
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-${{ matrix.node-version }}-

    - name: Install dependencies (frontend)
      run: |
        cd react-client
        npm install

    - name: Build frontend
      run: |
        cd react-client
        CI=false npm run build # Set CI=false to avoid treating warnings as errors
      env:
        REACT_APP_AZURE_SERVER_APP_ID: ${{ env.REACT_APP_AZURE_APP_ID }}
        REACT_APP_AZURE_APP_ID: ${{ env.REACT_APP_AZURE_APP_ID }}
        REACT_APP_: ${{ env.REACT_APP_CONTAINER_TYPE_ID }}
        REACT_APP_SP_ROOT_SITE_URL: ${{ vars.SHAREPOINT_ADMIN_SITE_URL }}
        REACT_APP_SAMPLE_API_URL: 'https://${{env.STATIC_WEBAPP_URL}}/api'
        REACT_APP_TENANT_ID: '${{ vars.AZURE_TENANT_ID }}'
        AZURE_CLIENT_SECRET: ${{ env.AZURE_CLIENT_SECRET }}
        AZURE_CLIENT_CERT_THUMBPRINT: ${{ env.AZURE_CLIENT_CERT_THUMBPRINT }}
        AZURE_CLIENT_CERT_PRIVATE_KEY: ${{ env.AZURE_CLIENT_CERT_PRIVATE_KEY }}
        AZURE_SPA_CLIENT_ID: ${{ env.AZURE_SPA_CLIENT_ID }}

    - name: Install dependencies (backend)
      run: |
        cd api
        npm install

    - name: Build backend
      run: |
        cd api
        CI=false npm run build # Set CI=false to avoid treating warnings as errors

    - name: Set up SonarQube environment variables
      run: |
        echo "SONAR_TOKEN=${{ secrets.SONAR_TOKEN }}" >> $GITHUB_ENV
        echo "SONAR_HOST_URL=https://sonar.provoke.co.nz" >> $GITHUB_ENV
        echo "SONAR_SCANNER_OPTS=-Dsonar.ssl.verifyServerCertificate=false" >> $GITHUB_ENV

    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      with:
        args: >
          -Dsonar.organization=provoke
          -Dsonar.sources=.
          -Dsonar.projectKey=ARLDigital
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ env.SONAR_HOST_URL }}
