name: Deploy SharePoint Container

on:
  workflow_dispatch:
  push:
    branches:
      - main    
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy_sharepoint_container:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Azure Login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_SERVICEPRINCIPAL_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        allow-no-subscriptions: true

    - name: Uninstall legacy PnP PowerShell module
      run: |
        if (Get-Module -ListAvailable -Name SharePointPnPPowerShellOnline) {
          Uninstall-Module -Name SharePointPnPPowerShellOnline -AllVersions -Force
        }
      shell: pwsh
  
    - name: Install new PnP PowerShell module
      run: |
        Install-Module -Name PnP.PowerShell -Scope CurrentUser -Force
        # Validate installation
        Get-Module -Name PnP.PowerShell -ListAvailable
      shell: pwsh            

    - name: Install SharePoint Online Management Shell Module
      run: |
        pwsh -Command "Install-Module -Name Microsoft.Online.SharePoint.PowerShell -Force -AllowClobber"

    - name: Extracting variables from Parameters JSON file
      id: extract_parameters
      run: |
        ADMIN_URL=$(jq -r '.parameters.adminUrl.value' .github/workflows/parameters.json)
        CONTAINER_TYPE_NAME=$(jq -r '.parameters.containerTypeName.value' .github/workflows/parameters.json)
        OWNING_APPLICATION_ID=$(jq -r '.parameters.owningApplicationId.value' .github/workflows/parameters.json)
        echo "ADMIN_URL=$ADMIN_URL" >> $GITHUB_ENV
        echo "CONTAINER_TYPE_NAME=$CONTAINER_TYPE_NAME" >> $GITHUB_ENV
        echo "OWNING_APPLICATION_ID=$OWNING_APPLICATION_ID" >> $GITHUB_ENV

    - name: Run PowerShell Script to Manage SharePoint Online
      shell: pwsh
      run: |

        Install-Module -Name Microsoft.Online.SharePoint.PowerShell -Force -AllowClobber
        Update-Module -Name Microsoft.Online.SharePoint.PowerShell

        
        # Define your variables
        $adminUrl = "${{ env.ADMIN_URL }}"
        $containerTypeName = "${{ env.CONTAINER_TYPE_NAME }}"
        $owningApplicationId = "${{ env.OWNING_APPLICATION_ID }}"

        # $username = "gitpipeline@pkssandbox.onmicrosoft.com"
        # $password = "SPERelentless@1"
        # $cred = New-Object -TypeName System.Management.Automation.PSCredential -argumentlist $userName, $(convertto-securestring $Password -asplaintext -force)
        # Connect-SPOService -Url https://pkssandbox-admin.sharepoint.com -Credential $cred

        # $username = "gitpipeline@pkssandbox.onmicrosoft.com"
        # $password = ConvertTo-SecureString -String "SPERelentless@1" -AsPlainText -Force  
        # $credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $userName, $password  
        # Connect-SPOService -Url https://pkssandbox-admin.sharepoint.com -Credential $credential

        $siteUrl= "https://pkssandbox-admin.sharepoint.com"
        $username = "gitpipeline@pkssandbox.onmicrosoft.com"
        $password = ConvertTo-SecureString -String "SPERelentless@1" -AsPlainText -Force
        $cred = New-Object System.Management.Automation.PSCredential -ArgumentList $username, $password
        Connect-SPOService -Url $siteUrl -Credential $cred

        # Import your custom SharePoint Online module (if required)
        # Import-Module CustomSharePointModule

        # Create a new container type (assuming New-SPOContainerType is a custom cmdlet)
        New-SPOContainerType -TrialContainerType -ContainerTypeName $containerTypeName -OwningApplicationId $owningApplicationId

      env:
        AZURE_CLIENT_ID: ${{ secrets.AZURE_SERVICEPRINCIPAL_CLIENT_ID }}
        AZURE_CLIENT_SECRET: ${{ secrets.AZURE_SERVICEPRINCIPAL_CLIENT_SECRET }}
        AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}